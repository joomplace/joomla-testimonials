stages:
  - cs
  - build
  - test

build:regular:
  stage: build
  before_script:
    - apt-get update -qq && apt-get install -y -qq zip
  script:
# check BOM
    - if grep -rn './' -e "\xEF\xBB\xBF"; then exit 1; fi
# check that no .sql files greater than version in updates
    - grep -E -o '<version>(.*?)</version>' ./pkg_testimonials.xml | sed -E 's/<version>|<\/version>//g' | while read version; do find ./com_testimonials/admin/sql/updates/ -maxdepth 2 -name "*.sql" -print |  sed -E 's/.*\/|\.sql//g' | while read sqin; do if [ "$sqin" \> "$version" ]; then exit 1; fi; done; done
# delete updater temporary
    - sed -E -i 's/<file.*?_joomplaceupdater.zip<\/file>//g' ./pkg_testimonials.xml
    - mkdir packages
    - grep -E -o '<file.*>(.*?)</file>' ./pkg_testimonials.xml |  sed -E 's/<file[^>]+>|.zip<\/file>//g' | while read in; do if [ "$in" != 'plg_installer_joomplaceupdater' ]; then cd ./"$in"; zip -r ./../packages/"$in".zip ./*; cd ./../; fi; done
    - pwd
  artifacts:
    paths:
    - packages/
    - pkg_testimonials.xml
    name: "pkg_testimonials_${CI_BUILD_REF_NAME}"
    when: on_success
    expire_in: 1 day

test:
  stage: test
  script:
    - echo 'Tests go here'
  dependencies:
    - build:regular

codestyle:
  stage: cs
  image: php:latest
  before_script:
    - php -v
    - apt-get update -qq && apt-get install -y -qq git
  script:
    - git clone https://github.com/squizlabs/PHP_CodeSniffer.git
    - cd PHP_CodeSniffer
    - php scripts/phpcs -i
    - php scripts/phpcs --standard=PEAR ../com_testimonials/admin/testimonials.php